<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://ofbiz.apache.org/dtds/services.xsd">
    <service name="findCustomerDetails" engine="groovy"
        location="component://customerFinder/groovyScripts/FindCustomerDetail.groovy"
        invoke="findCustomerDetails">
        <description>Service to fetch customer details from the FindCustomerView entity.</description>
        <!-- Optional input parameter -->
        <attribute name="partyId" type="String" optional="true" mode="IN" />
        <!-- Declare output parameters explicitly -->
        <attribute name="customerList" type="java.util.List" mode="OUT" />
        <attribute name="responseMessage" type="String" mode="OUT" />
    </service>
    <!-- Service to create a new customer if one does not already exist -->
    <service name="createCustomer" engine="groovy"
        location="component://customerFinder/groovyScripts/CreateCustomer.groovy"
        invoke="createCustomer">
        <description>
        </description>
        <attribute name="emailAddress" type="String" optional="false" mode="IN" />
        <attribute name="firstName" type="String" optional="false" mode="IN" />
        <attribute name="lastName" type="String" optional="false" mode="IN" />
        <!-- Optional fields for additional contact info -->
        <attribute name="postalAddress" type="String" optional="true" mode="IN" />
        <attribute name="contactNumber" type="String" optional="true" mode="IN" />
        <!-- Output: a result message -->
        <attribute name="resultMessage" type="String" mode="OUT" />
    </service>

    <!-- Service to update an existing customer's postal address and/or phone number -->
    <service name="updateCustomer" engine="groovy"
        location="component://customerFinder/groovyScripts/UpdateCustomer.groovy"
        invoke="updateCustomer">
        <description>
            Updates an existing customer's details.  
            Requires emailAddress to identify the customer and allows updates to postalAddress and contactNumber.
            It first verifies that the customer exists (via findCustomer) and then applies the updates.
        </description>
        <attribute name="emailAddress" type="String" optional="false" mode="IN" />
        <attribute name="postalAddress" type="String" optional="true" mode="IN" />
        <attribute name="contactNumber" type="String" optional="true" mode="IN" />
        <attribute name="resultMessage" type="String" mode="OUT" />
    </service>
</services>